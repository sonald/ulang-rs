pub fn test(x int32) -> int32 {
    return 43 - x;
}

fn test2() -> int32 {
    let z = 42;
    let y = 2;
    y = 1;
    match y {
        0 => {
            y = z;
        },
        1 => {
            return 2;
        },
        3 => {return 3;}
    }

    return y;
}

fn test3() -> int32 {
    let x = 1;
    loop {
        x += 1;
        if x > 10 {
            return x;
        }
    }

    return 0;
}

fn test4() -> int32 {
    let x = 1;
    loop {
        x += 1;
        if x > 10 {
            break;
        }
    }

    loop {
        x += 1;
        if x > 20 {
            break;
        }
    }

    return x;
}

fn test5() -> int32 {
    let res = 0;
    for x in 1..10 {
        res += x;
    }

    return res;
}

pub fn main(args string[]) {
    return test5();
}

fn test1() -> int32 {
    let x = test(1);
    let y = test(40);
    let z = test(41);
    x = x + y;
    z += x;
    z -= y;

    x = 0;
    if x == 0 {
        z += test2();
    } else {
        z = 0;
    }
    return test3();
}

